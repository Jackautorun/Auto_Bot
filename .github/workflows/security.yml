name: security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 2 * * 1'

permissions:
  contents: read

jobs:
  security:
    name: security
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install security tooling
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit security scan
        id: bandit
        continue-on-error: true
        run: |
          bandit -q -r . -x .git

      - name: Publish commit status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const outcome = '${{ steps.bandit.outcome }}';
            const state = outcome === 'success' ? 'success' : 'failure';
            const description = state === 'success' ? 'Bandit scan passed' : 'Bandit scan failed';
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'security',
              description,
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            });
            if (state === 'failure') {
              core.setFailed(description);
            }
