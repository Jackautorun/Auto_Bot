name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'python', 'go', 'java' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      id: autobuild
      uses: github/codeql-action/autobuild@v3
      continue-on-error: true

    - name: Perform CodeQL Analysis
      id: analyze
      uses: github/codeql-action/analyze@v3
      with:
        category: "security"
      continue-on-error: true

    - name: Fail if CodeQL analysis failed
      if: ${{ steps.autobuild.outcome != 'success' || steps.analyze.outcome != 'success' }}
      run: exit 1

  publish-status:
    name: Publish CodeQL status
    runs-on: ubuntu-latest
    needs: analyze
    if: always()
    permissions:
      contents: read
      statuses: write
    steps:
    - name: Publish aggregated commit status
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const result = '${{ needs.analyze.result }}';
          const success = result === 'success';
          const state = success ? 'success' : 'failure';
          const description = success ? 'CodeQL analysis passed' : 'CodeQL analysis failed';
          const sha = context.payload.pull_request?.head.sha ?? context.sha;
          await github.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha,
            state,
            context: 'codeql',
            description,
            target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
          });
          if (!success) {
            core.setFailed(description);
          }
